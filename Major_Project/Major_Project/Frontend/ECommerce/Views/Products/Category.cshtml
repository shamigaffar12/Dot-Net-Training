@model List<ECommerce.Models.Product>

@{
    ViewBag.Title = ViewBag.CategoryName + " Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #121212; /* dark theme */
        color: #f1f1f1;
        font-family: 'Segoe UI', sans-serif;
    }

    h2 {
        font-weight: 700;
        margin: 20px 0;
        color: #FFD700; /* gold heading */
    }

    .card {
        margin-top: 15px;
        border: none;
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s ease;
        background: #FFD700; /* GOLD background */
        color: #000;
        text-align: center;
    }

        .card:hover {
            transform: translateY(-6px);
            box-shadow: 0 10px 25px rgba(255, 215, 0, 0.6);
        }

        .card img {
            width: 100%;
            height: 220px;
            object-fit: contain;
            background: #fff;
            padding: 10px;
        }

    .card-body {
        padding: 15px;
    }

        .card-body h4 {
            font-weight: bold;
            font-size: 20px;
            color: #000;
        }

    .price-tag {
        font-size: 18px;
        font-weight: bold;
        color: #8B0000;
        margin-bottom: 15px;
        display: block;
    }

    .btn {
        border-radius: 25px;
        padding: 8px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
        margin: 5px;
    }

    .btn-primary {
        background: #000;
        border: none;
        color: #FFD700;
    }

        .btn-primary:hover {
            background: #333;
            color: #fff;
        }

    .btn-outline-dark {
        border: 2px solid #000;
        color: #000;
    }

        .btn-outline-dark:hover {
            background: #000;
            color: #FFD700;
        }

    .wishlist-btn {
        background: #b8860b;
        border: none;
        color: white;
    }

        .wishlist-btn:hover {
            background: #996515;
        }

    .out-of-stock {
        font-size: 16px;
        font-weight: bold;
        color: red;
        margin-top: 10px;
        display: block;
    }

    .pagination .page-link {
        background: #1e1e1e;
        color: #FFD700;
        border: 1px solid #FFD700;
    }

    .pagination .page-item.active .page-link {
        background: #FFD700;
        color: #000;
        font-weight: bold;
        border-color: #FFD700;
    }

    .pagination .page-link:hover {
        background: #333;
        color: #FFD700;
    }
</style>

<div class="container">
    <h2 class="text-center">@ViewBag.CategoryName Products</h2>

    <!-- Sorting -->
    <form method="get" action="@Url.Action("Category", "Products")" class="text-right mb-3">
        <input type="hidden" name="category" value="@ViewBag.CategoryName" />
        <select name="sort" onchange="this.form.submit()" class="form-control" style="width:200px; display:inline-block;">
            <option value="name" @(ViewBag.Sort == "name" ? "selected" : "")>Sort by Name</option>
            <option value="price" @(ViewBag.Sort == "price" ? "selected" : "")>Sort by Price</option>
            <option value="newest" @(ViewBag.Sort == "newest" ? "selected" : "")>Newest First</option>
        </select>
    </form>

    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var product in Model)
            {
                <div class="col-md-4 col-sm-6 mb-4">
                    <div class="card shadow-sm">
                        <img src="@(string.IsNullOrEmpty(product.ImageURL) ? Url.Content("~/Images/no-image.png") : "https://localhost:44353" + product.ImageURL)"
                             alt="@product.Name"
                             class="img-fluid" />

                        <div class="card-body">
                            <h4>@product.Name</h4>
                            <span class="price-tag">₹@product.Price</span>

                            @if (product.RemainingQuantity > 0)
                            {
                                <a href="@Url.Action("Add", "AddtoCart", new { id = product.ProductID })" class="btn btn-primary">
                                     Add to Cart
                                </a>
                                <a href="@Url.Action("Index", "ProductDetails", new { id = product.ProductID })"
                                   class="btn btn-outline-dark">
                                     View Details
                                </a>
                                <a href="@Url.Action("Addtocart", "Products", new { id = product.ProductID })" class="btn wishlist-btn">
                                    Add to Wishlist
                                </a>
                            }
                            else
                            {
                                <span class="out-of-stock"> Out of Stock</span>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-md-12 text-center">
                <div class="alert alert-dark shadow-sm rounded">
                    No products found in this category.
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Category", new { category = ViewBag.CategoryName, page = i, sort = ViewBag.Sort })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
